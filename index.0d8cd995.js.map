{"mappings":"AAAO,MAAMA,EAAUC,eAAgBC,GACrC,IACE,MAAMC,QAAYC,MAAMF,GAExB,OADaC,EAAIE,MAEnB,CAAE,MAAOC,GACP,MAAMA,CACR,CACF,ECLaC,EAAQ,CACnBC,IAAK,CAAC,GAGKC,EAAUR,iBACrB,IACE,MAAMS,QAAaV,EAAQ,kFAE3BO,EAAMC,IAAME,EAAKC,QAAQC,KAAKF,IACrB,CACLG,SAAUH,EAAKG,SACfC,cAAeJ,EAAKK,eACpBC,SAAUN,EAAKM,SACfC,gBAAiBP,EAAKQ,sBAI1BC,QAAQC,IAAIb,EAAMC,IACpB,CAAE,MAAOF,GACP,MAAMA,CACR,CACF,E,ICuDAe,EAAe,IA7Ef,MACEX,GAAQ,GAERY,OAASC,SAASC,cAAc,UAChCC,SAAWF,SAASC,cAAc,oBAClCE,UAAYH,SAASC,cAAc,mBACnCG,kBAAoBJ,SAASK,iBAAiB,kBAC9CC,SAAWN,SAASC,cAAc,cAClCM,aAAeP,SAASC,cAAc,kBAEtCO,OAAOrB,GACLsB,MAAKtB,EAAQA,EACbsB,KAAKC,QACL,MAAMC,EAASF,KAAKG,iBACpBH,KAAKP,SAASW,mBAAmB,aAAcF,EACjD,CAEAC,iBACE,MAAOzB,GAAQsB,MAAKtB,EACpBA,EAAKO,gBAAgBoB,KAAK3B,EAAKI,eAS/B,MAPe,4CACsBJ,EAAKM,+EAEhCN,EAAKO,gBAAgBL,KAAK0B,GACnB,uBAAuBA,+BAI1C,CAEAL,QACED,KAAKP,SAASc,UAAY,EAC5B,CAEAC,YAAY9B,GACVa,SAASK,iBAAiB,YAAYa,SAASC,IACzCA,EAAGC,YAAcjC,EAAK,GAAGI,eAC3B4B,EAAGE,UAAUC,IAAI,YAIrBb,KAAKP,SAASqB,iBAAiB,SAAS,SAAUC,GAEhD,IADYA,EAAEC,OAAOC,QAAQ,YACnB,OAEV,MAAMC,EAAUH,EAAEC,OAAOL,UACnBQ,EAAUzC,EAAK,GAAGI,cAEpBoC,IAAYC,GACdJ,EAAEC,OAAOJ,UAAUC,IAAI,SAGrBK,IAAYC,IACdJ,EAAEC,OAAOJ,UAAUC,IAAI,SAEvBtB,SAASK,iBAAiB,YAAYa,SAASC,IACzCA,EAAGC,YAAcjC,EAAK,GAAGI,eAC3B4B,EAAGE,UAAUC,IAAI,cAIzB,GACF,CAEAO,gBAIEpB,KAAKP,SAASW,mBAAmB,aAHjB,8GAIlB,CAEAiB,iBAAiBC,GACftB,KAAKH,SAASiB,iBAAiB,QAASQ,EAC1C,GCxEF,MAAMC,EAActD,iBAClB,IAEEoB,EAAK+B,sBAGC3C,IAGNY,EAAaU,OAAOxB,EAAYC,KAGhCa,EAAamB,YAAYjC,EAAYC,IAEvC,CAAE,MAAOF,GACPa,QAAQqC,MAAMlD,EAChB,CACF,EAIEiD,IACAlC,EAAKgC,iBAAiBE","sources":["src/js/helpers.js","src/js/model.js","src/js/view.js","src/js/controller.js"],"sourcesContent":["export const getJSON = async function (url) {\r\n  try {\r\n    const res = await fetch(url);\r\n    const data = res.json();\r\n    return data;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n","import { getJSON } from \"./helpers.js\";\r\nimport { API_URL } from \"./config.js\";\r\n\r\nexport const state = {\r\n  mcq: {},\r\n};\r\n\r\nexport const loadMcq = async function () {\r\n  try {\r\n    const data = await getJSON(`${API_URL}`);\r\n\r\n    state.mcq = data.results.map((data) => {\r\n      return {\r\n        category: data.category,\r\n        correctAnswer: data.correct_answer,\r\n        question: data.question,\r\n        incorrectAnswer: data.incorrect_answers,\r\n      };\r\n    });\r\n\r\n    console.log(state.mcq);\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n","// const quizContainer = document.querySelector(\".quiz__container\");\r\n\r\nclass QuestionView {\r\n  #data = [];\r\n\r\n  _score = document.querySelector(\".score\");\r\n  parentEl = document.querySelector(\".quiz__container\");\r\n  _question = document.querySelector(\".quiz__question\");\r\n  _optionsContainer = document.querySelectorAll(\".quiz__options\");\r\n  _btnNext = document.querySelector(\".btn__next\");\r\n  _btnPrevious = document.querySelector(\".btn__previous\");\r\n\r\n  render(data) {\r\n    this.#data = data;\r\n    this.clear();\r\n    const markup = this.generateMarkup();\r\n    this.parentEl.insertAdjacentHTML(\"afterbegin\", markup);\r\n  }\r\n\r\n  generateMarkup() {\r\n    const [data] = this.#data;\r\n    data.incorrectAnswer.push(data.correctAnswer);\r\n\r\n    const markup = `\r\n            <h4 class=\"quiz__question\">${data.question}</h4>\r\n            <ol type=\"a\" class=\"quiz__options\">\r\n            ${data.incorrectAnswer.map((option) => {\r\n              return `<li class=\"options\">${option}</li>`;\r\n            })}\r\n            </ol>`;\r\n    return markup;\r\n  }\r\n\r\n  clear() {\r\n    this.parentEl.innerHTML = \"\";\r\n  }\r\n\r\n  checkAnswer(data) {\r\n    document.querySelectorAll(\".options\").forEach((li) => {\r\n      if (li.innerText === data[0].correctAnswer) {\r\n        li.classList.add(\"right\");\r\n      }\r\n    });\r\n\r\n    this.parentEl.addEventListener(\"click\", function (e) {\r\n      const ans = e.target.closest(\".options\");\r\n      if (!ans) return;\r\n\r\n      const userAns = e.target.innerText;\r\n      const correct = data[0].correctAnswer;\r\n\r\n      if (userAns === correct) {\r\n        e.target.classList.add(\"green\");\r\n      }\r\n\r\n      if (userAns !== correct) {\r\n        e.target.classList.add(\"wrong\");\r\n\r\n        document.querySelectorAll(\".options\").forEach((li) => {\r\n          if (li.innerText === data[0].correctAnswer) {\r\n            li.classList.add(\"correct\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  renderSpinner() {\r\n    const spinner = `<div class=\"spinner-border\" role=\"status\">\r\n    <span class=\"visually-hidden\">Loading...</span>\r\n    </div>`;\r\n    this.parentEl.insertAdjacentHTML(\"afterbegin\", spinner);\r\n  }\r\n\r\n  addHandlerRender(handler) {\r\n    this._btnNext.addEventListener(\"click\", handler);\r\n  }\r\n}\r\n\r\nexport default new QuestionView();\r\n","import * as model from \"./model.js\";\r\nimport view from \"./view.js\";\r\nimport questionView from \"./view.js\";\r\n\r\nconst controlQuiz = async function () {\r\n  try {\r\n    //Render Spinner\r\n    view.renderSpinner();\r\n\r\n    //Load question\r\n    await model.loadMcq();\r\n\r\n    //render question\r\n    questionView.render(model.state.mcq);\r\n\r\n    //Get Answer\r\n    questionView.checkAnswer(model.state.mcq);\r\n\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n\r\nconst init = function () {\r\n  controlQuiz();\r\n  view.addHandlerRender(controlQuiz);\r\n};\r\n\r\ninit();\r\n"],"names":["$bd02c871d9c5ba8e$export$d047a7c56db64af4","async","url","res","fetch","json","err","$0f1d4402dffacf5b$export$ca000e230c0caa3e","mcq","$0f1d4402dffacf5b$export$2360a37469b9a43e","data","results","map","category","correctAnswer","correct_answer","question","incorrectAnswer","incorrect_answers","console","log","$0d253f80dc492c18$export$2e2bcd8739ae039","_score","document","querySelector","parentEl","_question","_optionsContainer","querySelectorAll","_btnNext","_btnPrevious","render","this","clear","markup","generateMarkup","insertAdjacentHTML","push","option","innerHTML","checkAnswer","forEach","li","innerText","classList","add","addEventListener","e","target","closest","userAns","correct","renderSpinner","addHandlerRender","handler","$f50bd1f2915ed0f2$var$controlQuiz","error"],"version":3,"file":"index.0d8cd995.js.map"}